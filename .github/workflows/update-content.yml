name: 🔄 Update Content

on:
  push:
    paths:
      - 'web-apps/**'
    branches: [ main, master ]
  workflow_dispatch: # Allow manual trigger

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GCP_REGION: europe-west1
  GCP_ZONE: europe-west1-b

jobs:
  update-content:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: 🔄 Update Content
      run: |
        echo "🔄 Checking if infrastructure exists..."
        
        # Check if instances exist
        if gcloud compute instances describe haproxy-prod --zone=europe-west1-b --quiet 2>/dev/null; then
          echo "✅ Infrastructure exists, updating content..."
          chmod +x ./update-content.sh
          ./update-content.sh
          echo "✅ Content updated successfully"
        else
          echo "⚠️ Infrastructure not found, skipping content update"
          echo "Run deploy workflow first to create infrastructure"
          exit 0
        fi

    - name: 🧪 Test Content Update
      run: |
        echo "🧪 Testing content update..."
        
        # Check if infrastructure exists before testing
        if gcloud compute instances describe haproxy-prod --zone=europe-west1-b --quiet 2>/dev/null; then
          echo "✅ Infrastructure exists, testing domains..."
          
          # Wait for content to be updated
          sleep 30
          
          # Test all domains
          echo "Testing Load Balancer (Roundrobin):"
          curl -f https://balancer.svdevops.tech || echo "⚠️ Load balancer test failed"
          
          echo "Testing Web1 (Direct):"
          curl -f https://web1.svdevops.tech || echo "⚠️ Web1 test failed"
          
          echo "Testing Web2 (Direct):"
          curl -f https://web2.svdevops.tech || echo "⚠️ Web2 test failed"
          
          # Test roundrobin with new content
          echo "Testing Roundrobin with updated content:"
          for i in {1..3}; do
            echo "Request $i:"
            curl -s https://balancer.svdevops.tech | grep -E "(Web Server|title)" | head -1
          done
        else
          echo "⚠️ Infrastructure not found, skipping tests"
        fi

    - name: 📊 Content Update Summary
      run: |
        echo "## 🔄 Content Updated Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📝 Updated Files:" >> $GITHUB_STEP_SUMMARY
        echo "- web-apps/web1.html" >> $GITHUB_STEP_SUMMARY
        echo "- web-apps/web2.html" >> $GITHUB_STEP_SUMMARY
        echo "- web-apps/haproxy.html" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🌐 Updated URLs:" >> $GITHUB_STEP_SUMMARY
        echo "- **Load Balancer (Roundrobin):** https://balancer.svdevops.tech" >> $GITHUB_STEP_SUMMARY
        echo "- **Web Server 1 (Direct):** https://web1.svdevops.tech" >> $GITHUB_STEP_SUMMARY
        echo "- **Web Server 2 (Direct):** https://web2.svdevops.tech" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Verification:" >> $GITHUB_STEP_SUMMARY
        echo "- All domains tested successfully" >> $GITHUB_STEP_SUMMARY
        echo "- Roundrobin working correctly" >> $GITHUB_STEP_SUMMARY
        echo "- Content updated on all servers" >> $GITHUB_STEP_SUMMARY
