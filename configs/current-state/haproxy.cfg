global
    daemon
    maxconn 4096
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# HTTP to HTTPS redirect
frontend http_redirect
    bind 0.0.0.0:80
    redirect scheme https code 301 if !{ ssl_fc }

# HTTPS frontend for load balancer (balancer.svdevops.tech)
frontend https_frontend
    bind 0.0.0.0:443 ssl crt /etc/haproxy/certs/balancer.svdevops.tech.pem
    
    # Stats page on /stats path
    acl is_stats path_beg /stats
    use_backend stats_backend if is_stats
    
    # Default to web servers
    default_backend web_servers

# Backend for load balancer with health checks
backend web_servers
    balance roundrobin
    option httpchk GET /
    server web1 10.132.15.221:80 check inter 5s fall 3 rise 2
    server web2 10.132.15.222:80 check inter 5s fall 3 rise 2

# Stats backend
backend stats_backend
    stats enable
    stats uri /stats
    stats refresh 30s
    stats show-node
    stats admin if TRUE

# Stats page - Port 8080 (main stats port)
listen stats_8080
    bind 0.0.0.0:8080
    stats enable
    stats uri /stats
    stats refresh 30s
    stats show-node
    stats admin if TRUE

# Stats page - Port 8084 (backup stats port)
listen stats_8084
    bind 0.0.0.0:8084
    stats enable
    stats uri /stats
    stats refresh 30s
    stats show-node
    stats admin if TRUE