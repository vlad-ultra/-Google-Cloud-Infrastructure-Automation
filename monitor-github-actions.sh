#!/bin/bash

# üìä GitHub Actions Monitor Script
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ GitHub Actions –±–µ–∑ –±—Ä–∞—É–∑–µ—Ä–∞

set -e

echo "üìä GitHub Actions Monitor"
echo "========================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_workflow_status() {
    local workflow_name="$1"
    local status=$(curl -s "https://api.github.com/repos/vlad-ultra/-Google-Cloud-Infrastructure-Automation/actions/runs" | \
        grep -A10 -B2 "\"name\": \"$workflow_name\"" | \
        grep -E '"status"|"conclusion"' | head -2)
    
    echo "$status"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π workflow
get_workflow_details() {
    local run_id="$1"
    echo "üîç –î–µ—Ç–∞–ª–∏ workflow run $run_id:"
    curl -s "https://api.github.com/repos/vlad-ultra/-Google-Cloud-Infrastructure-Automation/actions/runs/$run_id" | \
        grep -E '"name"|"status"|"conclusion"|"created_at"|"html_url"' | head -10
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_workflows() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö workflow..."
    echo ""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ workflow runs
    local response=$(curl -s "https://api.github.com/repos/vlad-ultra/-Google-Cloud-Infrastructure-Automation/actions/runs")
    
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ workflow runs:"
    echo "=========================="
    
    # –ü–∞—Ä—Å–∏–º –∏ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    echo "$response" | jq -r '.workflow_runs[] | "\(.name) - \(.status) - \(.conclusion // "running") - \(.created_at)"' 2>/dev/null || {
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é jq..."
        if command -v brew &> /dev/null; then
            brew install jq
        else
            echo "‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        fi
    }
    
    echo ""
    echo "üîó –°—Å—ã–ª–∫–∏ –Ω–∞ workflow runs:"
    echo "=========================="
    echo "$response" | jq -r '.workflow_runs[] | "\(.name): \(.html_url)"' 2>/dev/null || {
        echo "‚ö†Ô∏è –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ GitHub Actions"
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ workflow
check_specific_workflow() {
    local workflow_name="$1"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é $workflow_name..."
    
    local status=$(curl -s "https://api.github.com/repos/vlad-ultra/-Google-Cloud-Infrastructure-Automation/actions/runs" | \
        jq -r ".workflow_runs[] | select(.name == \"$workflow_name\") | .status" | head -1)
    
    local conclusion=$(curl -s "https://api.github.com/repos/vlad-ultra/-Google-Cloud-Infrastructure-Automation/actions/runs" | \
        jq -r ".workflow_runs[] | select(.name == \"$workflow_name\") | .conclusion" | head -1)
    
    case "$status" in
        "queued")
            echo -e "${YELLOW}‚è≥ $workflow_name: –í –æ—á–µ—Ä–µ–¥–∏${NC}"
            ;;
        "in_progress")
            echo -e "${BLUE}üîÑ $workflow_name: –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è${NC}"
            ;;
        "completed")
            if [ "$conclusion" = "success" ]; then
                echo -e "${GREEN}‚úÖ $workflow_name: –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
            else
                echo -e "${RED}‚ùå $workflow_name: –ó–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π${NC}"
            fi
            ;;
        *)
            echo -e "${YELLOW}‚ö†Ô∏è $workflow_name: –°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω ($status)${NC}"
            ;;
    esac
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
case "${1:-monitor}" in
    "monitor")
        monitor_workflows
        ;;
    "deploy")
        check_specific_workflow "üöÄ Auto Deploy Infrastructure"
        ;;
    "update")
        check_specific_workflow "üîÑ Update Content"
        ;;
    "monitor-workflow")
        check_specific_workflow "üìä Monitor Infrastructure"
        ;;
    "help")
        echo "üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
        echo "  ./monitor-github-actions.sh [–∫–æ–º–∞–Ω–¥–∞]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  monitor          - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ workflow runs"
        echo "  deploy           - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å deploy workflow"
        echo "  update           - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å update content workflow"
        echo "  monitor-workflow - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å monitor workflow"
        echo "  help             - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./monitor-github-actions.sh help"
        ;;
esac

echo ""
echo "üîó GitHub Actions: https://github.com/vlad-ultra/-Google-Cloud-Infrastructure-Automation/actions"
